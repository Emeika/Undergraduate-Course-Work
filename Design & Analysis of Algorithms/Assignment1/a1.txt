Part B: Design an algorithm to take sum of ‘n’ integers given that we want our linear
structure (list/array) to be divided into three parts instead of two parts at each recursive
step. You need to change the base condition(s) carefully

-----------------------------------------------------------------------------------------------

returnValue calcSum (Temp[1...n], p, r )       1.............................16
                                               T(n) = T(n/4) + T(n/4) + T(n/4)+T(n/4) +  1
if (p==r)
   return Temp[r]
else if (p== r-1)      #    3,4
  return Temp[r] + Temp[p]
else if (p==r-2)      # 3=p,4,5=r
 return Temp[p] + Temp[p+1] + Temp[r]
 

#p-----------mid1-------------mid2-------------r
1---------3---------6---------9
else

mid1 = floor (( p + r )/3)      
mid2 = floor ((mid1 + r)/2)     

chunk1 <-- calcSum(Temp,p,midL)
chunk2 <-- calcSum(Temp,midL+1,mid)
chunk3 <-- calcSum(Temp,mid+1,midR)
chunk4 <-- calcSum(Temp,midR+1,r)

return chunk1+chunk2+chunk3+chunk4